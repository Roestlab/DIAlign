#include <RcppEigen.h>
#include "SavitzkyGolayFilter.h"

namespace DIAlign
{
void SavitzkyGolayFilter::updateMembers_(){
  coeffs_.resize(frame_size_ * (frame_size_ / 2 + 1));

  for (int nl = 0; nl <= (int) (frame_size_ / 2); ++nl)
  {
    int nr = frame_size_ - 1 - nl;

    // compute a Vandermonde matrix whose columns are powers of the vector [-nL,...,nR]
    Eigen::MatrixXd A (frame_size_, order_ + 1);
    for (int i = -nl; i <= nr; i++)
    {
      for (int j = 0; j <= static_cast<int>(order_); j++)
      {
        A(i + nl, j) = std::pow((float)i, j); // pow(int, int) is not defined
      }
    }

    // compute the singular-value decomposition of A
    Eigen::JacobiSVD<Eigen::MatrixXd> svd (A, Eigen::ComputeThinU | Eigen::ComputeThinV);

    Eigen::VectorXd B (order_ + 1);
    for (int i = 0; i <= order_; ++i)
    {
      B(i) = svd.matrixV()(0, i) / svd.singularValues()(i);
    }

    // compute B*transpose(U)*b, where b is the unit vector b=[1 0 ... 0]
    for (int i = 0; i < frame_size_; ++i)
    {
      coeffs_[(nl + 1) * frame_size_ - i - 1] = 0;
      for (int j = 0; j <= order_; ++j)
      {
        coeffs_[(nl + 1) * frame_size_ - i - 1] += B(j) * svd.matrixU()(i, j);
      }
    }
  }
}

void SavitzkyGolayFilter::setCoeff(){
  if(frame_size_ == 13 && order_ ==4){
    coeffs_ = {0.053329, -0.0630252, -0.0572075, -0.00161603, 0.051713, 0.0711054, 0.0452489,
               -0.0168067, -0.0856496, -0.111506, -0.0242405, 0.266645, 0.87201, -0.0630252,
               0.0639948, 0.0711054, 0.0193924, -0.0436328, -0.0840336, -0.081448, -0.0290886,
               0.0662573, 0.184228, 0.290886, 0.33872, 0.266645, -0.0572075, 0.0711054, 0.0634659,
               -0.00176294, -0.0659634, -0.0902627, -0.0555327, 0.0376094, 0.168802, 0.297937,
               0.365164, 0.290886, -0.0242405, -0.00161603, 0.0193924, -0.00176294, -0.0290886,
               -0.0376976, -0.0138097, 0.0452489, 0.131045, 0.224041, 0.293589, 0.297937, 0.184228,
               -0.111506, 0.051713, -0.0436328, -0.0659634, -0.0376976, 0.0210084, 0.0922607, 0.160428,
               0.212141, 0.236293, 0.224041, 0.168802, 0.0662573, -0.0856496, 0.0711054, -0.0840336,
               -0.0902627, -0.0138097, 0.0922607, 0.188047, 0.246812, 0.25498, 0.212141, 0.131045,
               0.0376094, -0.0290886, -0.0168067, 0.0452489, -0.081448, -0.0555327, 0.0452489, 0.160428,
               0.246812, 0.278486, 0.246812, 0.160428, 0.0452489, -0.0555327, -0.081448, 0.0452489};
  } else if(frame_size_ == 11 && order_ ==4){
    coeffs_ = {0.041958, -0.0699301, -0.034965, 0.034965, 0.0699301, 0.041958,
               -0.034965, -0.104895, -0.0699301, 0.20979, 0.916084, -0.0699301,
               0.104895, 0.0699301, -0.034965, -0.111888, -0.104895, 0.0, 0.174825,
               0.34965, 0.412587, 0.20979, -0.034965, 0.0699301, 0.02331, -0.0536131,
               -0.0815851, -0.02331, 0.11655, 0.291375, 0.412587, 0.34965, -0.0699301,
               0.034965, -0.034965, -0.0536131, -0.02331, 0.04662, 0.13986, 0.2331,
               0.296037, 0.291375, 0.174825, -0.104895, 0.0699301, -0.111888,
               -0.0815851, 0.04662, 0.18648, 0.27972, 0.296037, 0.2331, 0.11655, 0.0,
               -0.034965, 0.041958, -0.104895, -0.02331, 0.13986, 0.27972, 0.333333,
               0.27972, 0.13986, -0.02331, -0.104895, 0.041958};
  } else if(frame_size_ == 11 && order_ ==3){
    coeffs_ = {-0.0839161, 0.0559441, 0.0909091, 0.0559441, -0.013986, -0.0839161, -0.118881, -0.0839161,
               0.0559441, 0.335664, 0.79021, 0.0559441, -0.020979, -0.0559441, -0.0559441, -0.027972,
               0.020979, 0.0839161, 0.153846, 0.223776, 0.286713, 0.335664, 0.0909091, -0.0559441,
               -0.102564, -0.0745921, 0.002331, 0.102564, 0.200466, 0.270396, 0.286713, 0.223776, 0.0559441,
               0.0559441, -0.0559441, -0.0745921, -0.0268065, 0.0606061, 0.160839, 0.247086, 0.292541,
               0.270396, 0.153846, -0.0839161, -0.013986, -0.027972, 0.002331, 0.0606061, 0.130536, 0.195804,
               0.240093, 0.247086, 0.200466, 0.0839161, -0.118881, -0.0839161, 0.020979, 0.102564, 0.160839,
               0.195804, 0.207459, 0.195804, 0.160839, 0.102564, 0.020979, -0.0839161};
  } else if(frame_size_ == 9 && order_ ==4){
    coeffs_ = {0.027195, -0.0660451, 0.003885, 0.0629371, 0.034965, -0.0582751, -0.0971251, 0.135975,
               0.956488, -0.0660451, 0.149573, 0.0143745, -0.13986, -0.128205, 0.0874126, 0.398213, 0.548563,
               0.135975, 0.003885, 0.0143745, -0.042735, -0.0407925, 0.0699301, 0.262238, 0.432012,
               0.398213, -0.0971251, 0.0629371, -0.13986, -0.0407925, 0.157343, 0.314685, 0.354312,
               0.262238, 0.0874126, -0.0582751, 0.034965, -0.128205, 0.0699301, 0.314685, 0.417249,
               0.314685, 0.0699301, -0.128205, 0.03496};
  } else if(frame_size_ == 9 && order_ ==3){
    coeffs_ = {-0.0707071, 0.0808081, 0.0808081, 0.0, -0.0909091, -0.121212, -0.020202, 0.282828,
               0.858586, 0.0808081, -0.0707071, -0.10101, -0.0454545, 0.0606061, 0.181818, 0.282828,
               0.328283, 0.282828, 0.0808081, -0.10101, -0.103175, 0.00865801, 0.168831, 0.311688,
               0.371573, 0.282828, -0.020202, 0.0, -0.0454545, 0.00865801, 0.116883, 0.233766, 0.313853,
               0.311688, 0.181818, -0.121212, -0.0909091, 0.0606061, 0.168831, 0.233766, 0.255411,
               0.233766, 0.168831, 0.0606061, -0.0909091};
  } else if(frame_size_ == 7 && order_ ==3){
    coeffs_ = {-0.047619, 0.0952381, 0.0238095, -0.0952381, -0.0952381, 0.190476, 0.928571, 0.0952381,
               -0.166667, -0.0952381, 0.142857, 0.380952, 0.452381, 0.190476, 0.0238095, -0.0952381,
               0.047619, 0.285714, 0.452381, 0.380952, -0.0952381, -0.0952381, 0.142857, 0.285714,
               0.333333, 0.285714, 0.142857, -0.0952381};
  } else if(frame_size_ == 7 && order_ ==2){
    coeffs_ = {0.119048, -0.0714286, -0.142857, -0.0952381, 0.0714286, 0.357143, 0.761905, -0.0714286,
               0.0, 0.0714286, 0.142857, 0.214286, 0.285714, 0.357143, -0.142857, 0.0714286, 0.214286,
               0.285714, 0.285714, 0.214286, 0.0714286, -0.0952381, 0.142857, 0.285714, 0.333333, 0.285714,
               0.142857, -0.0952381};
  } else{
    updateMembers_();
  }
}
}

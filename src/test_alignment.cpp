#include <iostream>
#include <stdio.h>
#include <vector>
#include <assert.h>

#include "alignment.h"
#include "utils.h"

#define ASSERT(condition) if(!(condition)) throw 1; // If you don't put the message, C++ will output the code.

void test_doAlignment(){
}

void test_quantile()
{
  // b = rnorm(100)
  // quantile(b)
  std::vector<double> data1 = {
     0.985643298,  0.305358625, -0.030430698,  1.300836997, -1.002702624,
    -0.923392073,  1.003987115, -0.758552207, -0.738213443,  0.103164416,
     1.016757827, -0.699249628, -0.009299595,  0.580463040,  1.450853163,
     1.184716643,  0.018078293,  0.070005826, -0.087896748,  0.835452408,
    -0.725639961, -0.759869563, -0.190038006, -0.790171255,  0.883708541,
    -0.204534491,  0.869469491, -0.062617046,  1.260772864, -0.423784467,
     0.663569463, -2.461349419, -0.266294616, -1.990211521,  1.743866937,
     0.339361137, -0.902607280, -1.027389030, -0.651188012,  0.236893999,
     0.314374864,  2.064192706, -0.765869383,  2.003350569, -0.704984456,
    -0.723548473,  0.731107490, -1.338029624,  1.184967694, -0.963651264,
     0.119541276,  0.152264105,  0.202037215,  2.064334943, -0.836541496,
    -0.442817341, -0.229893188, -1.270562585, -0.353020625,  0.601070758,
    -0.830894999, -0.688555158, -0.873387922,  0.350813804, -0.534951132,
     0.334585680,  1.010162010,  0.604817108, -0.533836175, -0.296583488,
    -0.322239757, -0.931284640,  1.066341331, -0.165827636,  1.397985890,
     0.210919402,  1.532328280, -0.548913110,  0.433181165, -1.010457002,
     0.557918324,  0.348689376, -1.049726855, -0.773761877, -0.699815673,
    -0.702511554,  0.499721120,  0.561014448,  0.586969672,  1.055745907,
     0.980771392, -1.633632565, -0.630072017,  0.340912462,  0.039924786,
     0.667250494, -0.076874786, -0.466381249, -0.943606389, -0.302940165
    };

  double q25 = getQuantile(data1, 0.25);
  double q50 = getQuantile(data1, 0.5);
  double q75 = getQuantile(data1, 0.75);
  double q95 = getQuantile(data1, 0.95);

  ASSERT( std::abs(q25 -  -0.70498446 ) < 1e-5);
  ASSERT( std::abs(q50 -  -0.030430698 ) < 1e-5);
  ASSERT( std::abs(q75 -  0.60107076 ) < 1e-5);
  ASSERT( std::abs(q95 -  1.4508532 ) < 1e-5);
}

int main()
{
  test_doAlignment();
  test_quantile();
  return 0;
}

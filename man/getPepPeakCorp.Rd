% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pairwise_pep_peak_corp.R
\name{getPepPeakCorp}
\alias{getPepPeakCorp}
\title{Establishes pairwise correspondence between extracted-ion chromatograms.}
\usage{
getPepPeakCorp(featureTable, pairName, XICs.A, XICs.B, alignType,
  oswFeatureList, expRSE = 0, samplingTime = 3.4,
  samples4gradient = 100, RSEdistFactor = 3.5, hardConstrain = FALSE,
  gapQuantile = 0.5, goFactor = 0.125, geFactor = 40,
  normalization = "mean", simMeasure = "dotProductMasked")
}
\arguments{
\item{featureTable}{A table of retention time identifications for each peptides.}

\item{pairName}{Pair names joined with underscore. e.g. runA_runB, This will allow
alignment of runB to runA.}

\item{XICs.A}{List of extracted ion chromatograms of runA.}

\item{XICs.B}{List of extracted ion chromatograms of runB.}

\item{alignType}{Available alignment methods are "global", "local" and "hybrid".}

\item{oswFeatureList}{List of features identified in each run. For feature identification
OpenSWATH, Spectrodive, Skyline etc can be used.}

\item{expRSE}{Expected residual standard error for constraining hybrid alignment.}

\item{samplingTime}{Sampling time of runs.}

\item{samples4gradient}{A logical scalar}

\item{RSEdistFactor}{A logical scalar}

\item{hardConstrain}{A logical scalar}

\item{gapQuantile}{A logical scalar}

\item{goFactor}{A logical scalar}

\item{geFactor}{A logical scalar}

\item{normalization}{A character string. Must be selected from (mean, l2)}

\item{simMeasure}{A character string. Must be selected from (dotProduct, cosineAngle,
cosine2Angle, dotProductMasked, euclideanDist, covariance and correlation)}
}
\value{
A numeric matrix
}
\description{
This function calculates three matrices for affine gap alignment using input
similarity matrix and affine gap opening and gap closing penalties. An
implementation of Needleman-Wunsch alignment and overlap alignment is also
provided. All three matrices are clubbed together in an output S4 object.
}
\examples{
pair <- "run1_run2"
MappedTime2 <- getPepPeakCorp(StrepAnnot, pair, StrepChroms[["run1"]], StrepChroms[["run2"]],
"hybrid", oswOutStrep, expRSE = 7.4)
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_order.R
\name{alignToMaster}
\alias{alignToMaster}
\title{Align descendants to master}
\usage{
alignToMaster(
  ref,
  eXp,
  alignedVecs,
  refRun,
  adaptiveRT,
  multipeptide,
  prec2chromIndex,
  mzPntrs,
  fileInfo,
  analytes,
  params
)
}
\arguments{
\item{ref}{(string) name of the descendant run. Must be in the rownames of fileInfo.}

\item{eXp}{(string) name of one of the parent run. Must be in the rownames of fileInfo.}

\item{alignedVecs}{(list of dataframes) Each dataframe contains aligned parents time-vectors and
resulting child/master time vector for a precursor. This is the second element of
 \code{\link{getChildXICs}} output.}

\item{refRun}{(integer) must be of the same length as of precursors. 1: reference is runA, 2: reference is runB.}

\item{multipeptide}{(environment) contains multiple data-frames that are collection of features
associated with analytes. This is an output of \code{\link{getMultipeptide}}.}

\item{prec2chromIndex}{(list) a list of dataframes having following columns: \cr
transition_group_id: it is PRECURSOR.ID from osw file. \cr
chromatogramIndex: index of chromatogram in mzML file.}

\item{mzPntrs}{(list) a list of mzRpwiz.}

\item{fileInfo}{(data-frame) output of \code{\link{getRunNames}}.}

\item{analytes}{(integer) this vector contains transition_group_id from precursors. It must be of
the same length as of multipeptide.}

\item{params}{(list) parameters are entered as list. Output of the \code{\link{paramsDIAlignR}} function.}
}
\value{
(None)
}
\description{
During traverse-down, parent runs are aligned to the master/child run. This function performs the
alignment by already saved aligned parent-child time vectors. For the aligned peaks, alignment_rank is
set to 1 in multipeptide environment.
}
\details{
refRun is flipped if eXp is runB instead of runA.
}
\examples{
dataPath <- system.file("extdata", package = "DIAlignR")
params <- paramsDIAlignR()
fileInfo <- DIAlignR::getRunNames(dataPath = dataPath)
mzPntrs <- list2env(getMZMLpointers(fileInfo))
features <- list2env(getFeatures(fileInfo, maxFdrQuery = 0.05, runType = "DIA_proteomics"))
precursors <- getPrecursors(fileInfo, oswMerged = TRUE, runType = params[["runType"]],
 context = "experiment-wide", maxPeptideFdr = params[["maxPeptideFdr"]])
prec2chromIndex <- list2env(getChromatogramIndices(fileInfo, precursors, mzPntrs))
adaptiveRTs <- new.env()
refRuns <- new.env()
tree <- ape::reorder.phylo(ape::read.tree(text = "(run1:7,run2:2)master1;"), "postorder")
\dontrun{
ropenms <- get_ropenms(condaEnv = "envName", useConda=TRUE)
traverseUp(tree, dataPath, fileInfo, features, mzPntrs, prec2chromIndex, precursors, params,
 adaptiveRTs, refRuns, ropenms)
multipeptide <- list2env(getMultipeptide(precursors, features), hash = TRUE)
analytes <- precursors$transition_group_id
alignedVecs <- readRDS(file = file.path(dataPath, "master1_av.rds"))
adaptiveRT <- (adaptiveRTs[["run1_run2"]] + adaptiveRTs[["run2_run1"]])/2
multipeptide[["4618"]]$alignment_rank[multipeptide[["4618"]]$run == "master1"] <- 1L
alignToMaster(ref = "master1", eXp = "run1", alignedVecs, refRuns[["master1"]], adaptiveRT,
 multipeptide, prec2chromIndex, mzPntrs, fileInfo, analytes, params)
# Cleanup
file.remove(file.path(dataPath, "master1_av.rds"))
file.remove(file.path(dataPath, "mzml", "master1.chrom.mzML"))
}
}
\seealso{
\code{\link{traverseUp}, \link{traverseDown}, \link{setAlignmentRank2}}
}
\author{
Shubham Gupta, \email{shubh.gupta@mail.utoronto.ca}

ORCID: 0000-0003-3500-8152

License: (c) Author (2020) + GPL-3
Date: 2020-07-19
}
\keyword{internal}

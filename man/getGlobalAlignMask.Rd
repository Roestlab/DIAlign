% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{getGlobalAlignMask}
\alias{getGlobalAlignMask}
\title{Get a mask for constraining similarity matrix.}
\usage{
getGlobalAlignMask(s, tA, tB, B1p, B2p, noBeef = 50L,
  hardConstrain = FALSE)
}
\arguments{
\item{ROW_SIZE}{(int) Number of rows of a matrix}

\item{COL_SIZE}{(int) Number of columns of a matrix}
}
\value{
affineAlignObj (S4class) A S4class dummy object from C++ AffineAlignObj struct
}
\description{
This function takes in timeVectors from both runs, a global-fit object and
sample-length of window of no constraining. Outside of window, all elements
of matrix are either equally weighted or weighted proportional to distance
from window-boundry.
}
\examples{

B1p <- predict(Loess.fit, tRunAVec[1])
B2p <- predict(Loess.fit, tRunAVec[length(tRunAVec)])
m <- getGlobalAlignMask(s, tRunAVec, tRunBVec, B1p, B2p, noBeef, FALSE)
x <- setAffineAlignObj_S4(4, 5)
x@signalA_len # 3
}
\author{
Shubham Gupta, \email{shubh.gupta@mail.utoronto.ca}
ORCID: 0000-0003-3500-8152
License: (c) Author (2019) + MIT
Date: 2019-03-08
}
